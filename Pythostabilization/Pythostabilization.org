#+OPTIONS:    H:3 num:nil toc:1 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:t d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate 
#+TITLE:    PYTHOSTABILIZATION
#+AUTHOR:    teoten
#+EMAIL:     teoten@gmail.com
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>
#+BABEL: :exports both
#+PROPERTY: header-args :exports both

* BACKGROUND

#+BEGIN_SRC R :session :exports none
  library(tidyverse)
  library(kgv)
  library(cowplot)

  amf  <- read.table('../ignore/Phytostabilization/AMF.txt', header=T)
  amf$ID <- c(1:48)
  variables  <- read.csv('../ignore/Phytostabilization/PCA.csv',
                         header=T,  na.strings = "ND")
  variables$ID <- c(1:48)
  titles <- data.frame(Spp = amf$Specie, Time = amf$Time, Site = amf$Site)

  data_all <- as_tibble(amf) %>%
      left_join(as_tibble(variables))

  data_all <- mutate(data_all, Time = parse_factor(as.character(Time),
                                         levels = c('Mar', 'May',
                                                    'Jul', 'Nov')))

#+END_SRC

** THE EXPERIMENT

The area surrounding the city of [[https://en.wikipedia.org/wiki/P%C5%99%C3%ADbram][Příbram]] in the Czech Republic is know 
for its history mining silver and iron. In the last 200 years a smelter
has been contaminating the air and the river with Zn, Pb, Cd and As, 
until 1972 when its production stopped. Today the smelter recycles Hg from 
scrap materials, mainly car batteries. However the results from the
contamination are still causing problems today, mainly in soil and
water of the surroundings.

One of the techniques to remediate soil contamination is called
"Phytostabilization". It is the use of plants that are resistant to
contamination which are able to immobilise the contaminants in the roots,
or in the area of soil surrounding the roots, called rhizosphere. This
makes the contaminant less mobile (or more stable) to the ground-water, 
or to the upper
part of the plant, where it can cause more problems i.e. in drinking water
or when the plant is eaten by animals. For this purpose, plants have to be
not only resistant to the contaminant, but also able to keep the 
contaminants at the root level.

The data abstracted here shows the results of a research project aiming at
finding plants with potential for Phytostabilization. The paper can be
found in [[https://www.sciencedirect.com/][ScienceDirect]] under the name
[[https://www.sciencedirect.com/science/article/pii/S0048969719347011][Seasonal fluctuations of Zn, Pb, As and Cd contents in the biomass of selected grass species growing on contaminated soils: Implications for in situ phytostabilization]]

#+NAME:   fig:1
#+ATTR_HTML: :width 80% :height 80%
[[./GraphAbstract.png]]

** THE DATA

Samples of soil and plant from the contaminated site described above were
taken during 2017 in four different times. The samples were processed in
the [[https://www.fzp.czu.cz/en/][Faculty of Environmental Sciences]] of the [[https://www.czu.cz/cs/][Czech University of Life Sciences of Prague]].
The measurements include different fractions of the elements in the soil
(such as pseudo-total, sequential extraction and CaCl_2), elements 
composition of the plants, and Arbuscular mycorrhiza colonisation of
the roots.

* VISUALISATIONS IN THE PAPER

Here follows the visualisations used for the paper, in a more visual style,
and with the examples of the code used in R.

The variables used are summarised in the following code block.
    + *Specie*: Three different species of grass were used. These are represented by =A= (/Agrostis capillaris/), =F= (/Festuca rubra/) and =M= (/Arrhenaterus elatius/).
    + *F and M*: =F= is the total mycorrhiza colonisation in roots and =M= the intensity of colonisation.
    + *Element symbols*: The single symbols of chemical elements contain the total concentrations in the sample taken.
      + Symbol followed by =.ext= is the extractable, or bio-available fraction.
      + Symbol followed by =.a= is the concentration in the above-ground plant parts.
      + Symbol followed by =.b= is the concentration in the below-ground plant parts.

#+BEGIN_SRC R :session :results output code :exports both
   data_all
#+END_SRC

#+RESULTS:
#+begin_src R
# A tibble: 48 x 71
   Specie Time   Site     F      M    ID     S     K    Ca    Mn    Fe    Cu
   <fct>  <fct> <int> <dbl>  <dbl> <int> <dbl> <int> <int> <int> <int> <int>
 1 M      Mar       1  90   19.6       1  202.  4752  2383  3035 22660    75
 2 M      Mar       2  53.3 13.9       2  188.  5458  1778  3156 27258   101
 3 M      Mar       3  23.3  0.367     3  205.  6264  1856  2701 25525    68
 4 M      Mar       4  70   14.8       4  208.  5832  1319  2633 26344    96
 5 C      Mar       5  36.7  1.47      5  115.  6843  2050  1805 29119    81
 6 C      Mar       6  30    1.53      6  117.  7914  2726  1755 28214    84
 7 C      Mar       7  23.3  1.33      7  138.  8018  1482  1892 26039    78
 8 C      Mar       8  26.7  0.267     8  113.  4174  2319  1069 15514    59
 9 A      Mar       9  26.7  0.4       9  181   7006  1576  1637 25629    85
10 A      Mar      10  93.3 15.1      10  166.  6540  1471  2003 28207    88
# … with 38 more rows, and 59 more variables: Zn <int>, As <int>, Pb <int>,
#   Na.ext <dbl>, Mg.ext <dbl>, Al.ext <dbl>, K.ext <dbl>, Ca.ext <dbl>,
#   Mn.ext <dbl>, Fe.ext <dbl>, Ni.ext <dbl>, Cu.ext <dbl>, Zn.ext <dbl>,
#   As.ext <dbl>, Se.ext <dbl>, Sr.ext <dbl>, Cd.ext <dbl>, Pb.ext <dbl>,
#   Ba.ext <dbl>, Na.b <dbl>, Mg.b <dbl>, Al.b <dbl>, K.b <dbl>, Ca.b <dbl>,
#   Ti.b <dbl>, V.b <dbl>, Cr.b <dbl>, Mn.b <dbl>, Fe.b <dbl>, Ni.b <dbl>,
#   Cu.b <dbl>, Zn.b <dbl>, As.b <dbl>, Se.b <dbl>, Sr.b <dbl>, Mo.b <dbl>,
#   Cd.b <dbl>, Pb.b <dbl>, Ba.b <dbl>, Na.a <dbl>, Mg.a <dbl>, Al.a <dbl>,
#   K.a <dbl>, Ca.a <dbl>, Ti.a <dbl>, V.a <dbl>, Cr.a <dbl>, Mn.a <dbl>,
#   Fe.a <dbl>, Ni.a <dbl>, Cu.a <dbl>, Zn.a <dbl>, As.a <dbl>, Se.a <dbl>,
#   Sr.a <dbl>, Mo.a <dbl>, Cd.a <dbl>, Pb.a <dbl>, Ba.a <dbl>
#+end_src

Here is a simple example: Cd concentrations in above-ground tissue

#+BEGIN_SRC R :session :file fig2.png :results graphics file :exports both
  data_all %>%
      group_by(Specie, Time) %>%
      summarise(Mean = mean(Cd.a),
                SD = sd(Cd.a),
                n = n(),
                SE = SD/sqrt(n)) %>%
      ggplot(aes(factor(Time), Mean, fill = factor(Specie))) +
      geom_bar(stat = 'identity',
               position= position_dodge(0.5),
               width=0.4) +
      geom_errorbar(aes(ymax = Mean + SE,
                        ymin = Mean - SE),
                    position=position_dodge(0.5), width=0.2) +
      theme_bw() +
      scale_fill_brewer(palette = 'Reds')
#+END_SRC

#+RESULTS:
[[file:fig2.png]]

The paper shows concentrations of Zn, Pb, As and Cd. Due to the limitation
in the space, the total concentrations of elements were not included in the
final publication, and the plots were delivered in black and white. Here
we are going to add some colour to the plots and improve the visualisation.

We can start by transforming our previous plot into a function where
we can choose which variable to plot. Then we can apply it to all the
elements that we want to plot:

#+BEGIN_SRC R :session
  plot_elements <- function(symb)
  {
      data_all %>%
          group_by(Specie, Time) %>%
          summarise(Mean = mean(!!sym(symb)),
                    SD = sd(!!sym(symb)),
                    n = n(),
                    SE = SD/sqrt(n)) %>%
          ggplot(aes(factor(Time), Mean, fill = factor(Specie))) +
          geom_bar(stat = 'identity',
                   position= position_dodge(0.7),
                   width=0.6) +
          geom_errorbar(aes(ymax = Mean + SE,
                            ymin = Mean - SE),
                        position=position_dodge(0.7),
                        width=0.4) +
          theme_bw() +
          labs(y = paste(symb, 'mg Kg⁻¹'),
               x = NULL) +
          theme(plot.title = element_text(family = "Helvetica",
                                          face="bold",
                                          size=(15),
                                          hjust=0.5),
                legend.position="none",
                text = element_text(size = 15),
                legend.title = element_text(face = "bold", size = 13),
                legend.text = element_text(size = 13)) +
          guides(fill = guide_legend(title = 'Species')) +
          scale_fill_brewer(palette = 'Reds')
  }

  bars_soil <- lapply(c('Pb.ext', 'Zn.ext', 'As.ext', 'Cd.ext'),
                      plot_elements)
  bars_above <- lapply(c('Pb.a', 'Zn.a', 'As.a', 'Cd.a'), plot_elements)
  bars_below <- lapply(c('Pb.b', 'Zn.b', 'As.b', 'Cd.b'), plot_elements)
#+END_SRC

Now we can use the package Cowplot to set the bar plots together.

#+BEGIN_SRC R :session :file fig3.png :results graphics file :exports both
  library(cowplot)
  
  ## Get legends
  legends <- get_legend(bars_soil[[1]] +
                        theme(legend.position = "bottom"))

  ## Create a title
  leg_ext  <- ggdraw() +
      draw_label(expression('Extractable Fraction'),
                 fontface = 'bold',
                 size=25)

  ## PLOT
  plot_grid(leg_ext, legends,
            plotlist = bars_soil, ncol = 2,
            rel_heights = c(0.2, 1, 1))
#+END_SRC

#+RESULTS:
[[file:fig3.png]]

#+BEGIN_SRC R :session :file fig4.png :results graphics file :exports both
   leg_below  <- ggdraw() +
      draw_label(expression('Below-ground Tissue'),
                 fontface = 'bold',
                 size=25)
  ## PLOT
  plot_grid(leg_below, legends,
            plotlist = bars_below, ncol = 2,
            rel_heights = c(0.2, 1, 1))
#+END_SRC

#+RESULTS:
[[file:fig4.png]]

#+BEGIN_SRC R :session :file fig5.png :results graphics file :exports both
   leg_above  <- ggdraw() +
      draw_label(expression('Above-ground Tissue'),
                 fontface = 'bold',
                 size=25)
  ## PLOT
  plot_grid(leg_above, legends,
            plotlist = bars_above, ncol = 2,
            rel_heights = c(0.2, 1, 1))
#+END_SRC

#+RESULTS:
[[file:fig5.png]]
